{"ast":null,"code":"var _jsxFileName = \"/mnt/d/D_Drive_Folders/VS Code Workspace/event-check-in/admin-site/src/components/Admin.js\",\n    _s = $RefreshSig$();\n\nimport { getDatabase, ref, child, get, set } from \"firebase/database\";\nimport { useState } from \"react\";\nimport { Person } from \"./Person\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dataRendering = data => {\n  return data == null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : Object.keys(data).map((person, i) => {\n    return /*#__PURE__*/_jsxDEV(Person, {\n      data: data,\n      person: person,\n      path: `names/${person}`\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  });\n};\n\nexport function Admin() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [json, setJson] = useState({}); //read json from database\n\n  const database = ref(getDatabase());\n  get(child(database, \"names\")).then(snapshot => {\n    if (snapshot.exists()) {\n      setData(snapshot.val());\n    } else {\n      console.log(\"No data available\");\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n\n  const onChangeEvent = event => {\n    //create json object form list of names\n    let names = event.target.value.split(/\\n/);\n    let jsonObj = {\n      names: {}\n    };\n    names.forEach(name => {\n      jsonObj.names[name.trim()] = {\n        checkin: false\n      };\n    });\n    setJson(jsonObj);\n  };\n\n  const onSubmitEvent = () => {\n    const db = getDatabase();\n    console.log(json);\n    set(ref(db, \"/\"), json);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 align-middle w-50 m-auto text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-5\",\n        children: \"List of Attendees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), dataRendering(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group w-50 m-auto mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"namesInput\",\n        children: \"Enter list of names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"namesInput\",\n        rows: \"5\",\n        onChange: onChangeEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary m-auto my-3\",\n        onClick: onSubmitEvent,\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Admin, \"s1Q2xOVzJLkGjYWiquJ4lNVzRlU=\");\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["getDatabase","ref","child","get","set","useState","Person","dataRendering","data","Object","keys","map","person","i","Admin","setData","json","setJson","database","then","snapshot","exists","val","console","log","catch","error","onChangeEvent","event","names","target","value","split","jsonObj","forEach","name","trim","checkin","onSubmitEvent","db"],"sources":["/mnt/d/D_Drive_Folders/VS Code Workspace/event-check-in/admin-site/src/components/Admin.js"],"sourcesContent":["import { getDatabase, ref, child, get, set } from \"firebase/database\";\nimport { useState } from \"react\";\n\nimport { Person } from \"./Person\";\n\nconst dataRendering = (data) => {\n  return data == null ? (\n    <></>\n  ) : (\n    Object.keys(data).map((person, i) => {\n      return (\n        <Person key={i} data={data} person={person} path={`names/${person}`} />\n      );\n    })\n  );\n};\n\nexport function Admin() {\n  const [data, setData] = useState(null);\n  const [json, setJson] = useState({});\n  //read json from database\n  const database = ref(getDatabase());\n  get(child(database, \"names\"))\n    .then((snapshot) => {\n      if (snapshot.exists()) {\n        setData(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n  const onChangeEvent = (event) => {\n    //create json object form list of names\n    let names = event.target.value.split(/\\n/);\n    let jsonObj = { names: {} };\n    names.forEach((name) => {\n      jsonObj.names[name.trim()] = { checkin: false };\n    });\n    setJson(jsonObj);\n  };\n\n  const onSubmitEvent = () => {\n    const db = getDatabase();\n    console.log(json);\n    set(ref(db, \"/\"), json);\n  };\n\n  return (\n    <>\n      <div className=\"mb-3 align-middle w-50 m-auto text-center\">\n        <h2 className=\"my-5\">List of Attendees</h2>\n        {dataRendering(data)}\n      </div>\n      <div class=\"form-group w-50 m-auto mt-5\">\n        <label for=\"namesInput\">Enter list of names</label>\n        <textarea\n          class=\"form-control\"\n          id=\"namesInput\"\n          rows=\"5\"\n          onChange={onChangeEvent}\n        ></textarea>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary m-auto my-3\"\n          onClick={onSubmitEvent}\n        >\n          Add List\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}